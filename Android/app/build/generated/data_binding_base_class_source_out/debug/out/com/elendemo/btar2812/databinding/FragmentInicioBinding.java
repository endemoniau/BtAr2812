// Generated by data binding compiler. Do not edit!
package com.elendemo.btar2812.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.elendemo.btar2812.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentInicioBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout LayoutInicio;

  @NonNull
  public final EditText cantidadleds;

  @NonNull
  public final TextView estado;

  @NonNull
  public final Spinner spinner;

  @Bindable
  protected String mTextoStatus;

  @Bindable
  protected String mLedNumbers;

  protected FragmentInicioBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout LayoutInicio, EditText cantidadleds, TextView estado, Spinner spinner) {
    super(_bindingComponent, _root, _localFieldCount);
    this.LayoutInicio = LayoutInicio;
    this.cantidadleds = cantidadleds;
    this.estado = estado;
    this.spinner = spinner;
  }

  public abstract void setTextoStatus(@Nullable String textoStatus);

  @Nullable
  public String getTextoStatus() {
    return mTextoStatus;
  }

  public abstract void setLedNumbers(@Nullable String ledNumbers);

  @Nullable
  public String getLedNumbers() {
    return mLedNumbers;
  }

  @NonNull
  public static FragmentInicioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_inicio, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInicioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentInicioBinding>inflateInternal(inflater, R.layout.fragment_inicio, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentInicioBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_inicio, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentInicioBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentInicioBinding>inflateInternal(inflater, R.layout.fragment_inicio, null, false, component);
  }

  public static FragmentInicioBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentInicioBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentInicioBinding)bind(component, view, R.layout.fragment_inicio);
  }
}
